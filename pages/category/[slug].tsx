import type { InferGetStaticPropsType } from 'next'
import Head from 'next/head'
import Bloglist from '../../components/Bloglist/Bloglist'
import { getByUID, getUIDs } from '../../lib/prismic'
import { Category } from '../../lib/types'
import { sortMostRecent } from '../../lib/utils'

const CategoryPage = ({
  category,
}: InferGetStaticPropsType<typeof getStaticProps>) => (
  <>
    <Head>
      <title>{(category as Category).data.name}</title>
      <meta name="description" content="Generated by create next app" />
      <link rel="icon" href="/favicon.ico" />
    </Head>

    <Bloglist category={category} />
  </>
)

export const getStaticPaths = async () => ({
  paths: (await getUIDs('category')).map((uid) => ({
    params: { slug: uid },
  })),
  fallback: false,
})

type Props = {
  params: {
    slug: string
  }
}

export const getStaticProps = async ({ params }: Props) => {
  const cat = (await getByUID('category', params.slug, {
    fetchLinks: 'article.thumbnail,article.title',
  })) as unknown as Category

  const { blogs } = cat.data
  blogs.sort(sortMostRecent)
  const category = { ...cat, blogs }
  return { props: { category } }
}

export default CategoryPage
